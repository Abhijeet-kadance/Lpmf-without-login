"""
Django settings for Localisation_Project project.
Generated by 'django-admin startproject' using Django 3.2.9.
For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from django.contrib.messages import constants as messages
import environ

env = environ.Env()



MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env.read_env(os.path.join(BASE_DIR, 'Localisation_Project', '.env'))
# print(env('RESET_PASSWORD_LINK'))

print(BASE_DIR)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = {env('SECRET_KEY')}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

#Session Cookie flag
SESSION_COOKIE_SECURE = True

ALLOWED_HOSTS = ['*']
# SANJAYB



ENCRYPT_KEY = b'tmzHcYuvLUhxjcxZ4k_iqfCx-HUq6PCvdbXr4vOC5B4='
# Application definition

INSTALLED_APPS = [
    'admin_interface',
    'colorfield',
    # 'adminlte3',
    # 'adminlte3_theme',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Localisation_App',
    'ckeditor',
    'search',
    'django_elasticsearch_dsl',
]

ELASTICSEARCH_DSL={
    'default':{
        'hosts': 'localhost:9200'
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'Localisation_Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #  'DIRS': [],
        'DIRS': [BASE_DIR, 'templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Localisation_Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'localisation_db',
        'USER': 'root',
        'PASSWORD': 'd@t@b@se',
        'HOST': '10.208.10.193',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
            'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"',
            'charset': 'utf8mb4'
        }
    },

}


CACHE_TTL = 60 * 1500

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "example"
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATIC_URL = '/static/'
# MEDIA_URL = "/media/"

# MEDIA_ROOT = BASE_DIR / 'media'
# STATIC_DIR = BASE_DIR / 'static'
# STATIC_ROOT = BASE_DIR / 'static'
#STATICFILES_DIRS = BASE_DIR / 'static'

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

if DEBUG:

  STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

else:

  STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



LOGIN_REDIRECT_URL = 'Localisation_App:home'
LOGIN_URL = 'Localisation_App:login'

#LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': False,
   # "root": {"level": "INFO", "handlers": ["file1"]},
#    'loggers': {
#        'django': {
#            'db_handlers':  ['file1'],
#            'level': 'INFO',
#            "propagate": True
#
#        },
#    },
#    'db_handlers': {

       # 'file': {
       #     'level': 'DEBUG',
       #     'class': 'logging.handlers.RotatingFileHandler',
       #     'filename': 'logs/debug.log',
       #     'maxBytes': 1024*1024*5, # 5 MB
       #     'backupCount': 5,
       #     'formatter': 'verbose',
       # },
#        'file1': {
#            'level': 'INFO',
#            'class': 'logging.handlers.RotatingFileHandler',
#            'filename': os.path.join(BASE_DIR, 'logs/info.log'),
#            'maxBytes': 1024*1024*5, # 5 MB
#            'backupCount': 5,
#            'formatter': 'verbose',
#        },
       # 'file2': {
       #     'level': 'ERROR',
       #     'class': 'logging.handlers.RotatingFileHandler',
       #     'filename': 'logs/error.log',
       #     'maxBytes': 1024*1024*5, # 5 MB
       #     'backupCount': 5,
       #     'formatter': 'verbose',
       # }
#    },
#    'formatters': {
#        'verbose': {
#            'format': '{name} {levelname} {asctime} {module} {process:d} {thread:d} {message}',
#            'style': '{',
#       },
      # 'simple': {
      #      'format': '{levelname} {message}',
      #      'style': '{',
      #  },
#    },



#}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
 #   "root": {"level": "INFO", "handlers": ["file"]},
    "db_handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": "/var/log/django.log",
            "formatter": "app",
        },
    },
    "loggers": {
        "django": {
            "db_handlers": ["file"],
            "level": "INFO",
            "propagate": True
        },
    },
    "formatters": {
        "app": {
            "format": (
                u"%(asctime)s [%(levelname)-8s] "
                "(%(module)s.%(funcName)s) %(message)s"
            ),
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
}







# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# print(BASE_DIR)


SERVER_EMAIL = 'abhijeett@cdac.in'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.cdac.in'
EMAIL_HOST_PASSWORD = '@bhijeet@123'  # please enter password
EMAIL_HOST_USER = SERVER_EMAIL
EMAIL_PORT = 587
# EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



